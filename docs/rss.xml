<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>陈振威</title><link>http://blog.meekdai.com</link><description>人生而自由</description><copyright>陈振威</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://meekdai.com/avatar.svg</url><title>avatar</title><link>http://blog.meekdai.com</link></image><lastBuildDate>Tue, 07 May 2024 03:09:28 +0000</lastBuildDate><managingEditor>陈振威</managingEditor><ttl>60</ttl><webMaster>陈振威</webMaster><item><title>MySQL 的锁</title><link>http://blog.meekdai.com/post/MySQL%20-de-suo.html</link><description>线上系统中，在高并发的访问之下，出现了 死锁问题 或者 等待锁时间过长导致超时，那么碰到这些情况，就可能问你锁相关的问题&#13;
首先还是先给锁分类，之后再来逐个了解：&#13;
按照功能划分：&#13;
&#13;
- 共享锁：也叫 S 锁 或 读锁，是共享的，不互斥&#13;
- 加锁方式：select ... lock in share mode&#13;
- 排他锁：也叫 X 锁 或 写锁，写锁阻塞其他锁&#13;
- 加锁方式：select ... for update&#13;
&#13;
按照锁的粒度划分：&#13;
&#13;
- 全局锁：锁整个数据库&#13;
- 表级锁：锁整个表&#13;
- 行级锁：锁一行记录的索引&#13;
- 记录锁：锁定索引的一条记录&#13;
- 间隙锁：锁定一个索引区间&#13;
- 临键锁：记录锁和间隙锁的结合，解决幻读问题&#13;
- 插入意向锁：执行 insert 时添加的行记录 id 的锁&#13;
- 意向锁：存储引擎级别的“表级锁”&#13;
&#13;
相关命令：&#13;
```&#13;
-- 加锁&#13;
flush tables with read lock;&#13;
&#13;
-- 释放锁&#13;
unlock tables;&#13;
```&#13;
&#13;
表级锁:&#13;
表级锁中又分为以下几种：&#13;
&#13;
- 表读锁：阻塞对当前表的写，但不阻塞读&#13;
- 表写锁：阻塞队当前表的读和写&#13;
- 元数据锁：这个锁不需要我们手动去添加，在访问表的时候，会自动加上，这个锁是为了保证读写的正确&#13;
- 当对表做 增删改查 时，会自动添加元数据读锁&#13;
- 当对表做 结构变更 时，会自动添加元数据写锁&#13;
&#13;
- 自增锁：是一种特殊的表级锁，自增列事务执行插入操作时产生&#13;
查看表级锁的命令：&#13;
&#13;
```&#13;
-- 查看表锁定状态&#13;
show status like 'table_locks%';&#13;
-- 添加表读锁&#13;
lock table user read;&#13;
-- 添加表写锁&#13;
lock table user write;&#13;
-- 查看表锁情况&#13;
show open tables;&#13;
-- 删除表锁&#13;
unlock tables;&#13;
```&#13;
&#13;
![image](https://github.com/China-Wei/China-Wei.github.io/assets/52816610/306ad97d-9743-4e62-8eb9-1ede2bd8ff7d)&#13;
。</description><guid isPermaLink="true">http://blog.meekdai.com/post/MySQL%20-de-suo.html</guid><pubDate>Tue, 07 May 2024 02:51:00 +0000</pubDate></item><item><title>股票</title><link>http://blog.meekdai.com/post/gu-piao.html</link><description>量化交易策略:https://github.com/edarchimbaud/awesome-systematic-trading。</description><guid isPermaLink="true">http://blog.meekdai.com/post/gu-piao.html</guid><pubDate>Sat, 23 Mar 2024 00:04:22 +0000</pubDate></item><item><title>工具激活</title><link>http://blog.meekdai.com/post/gong-ju-ji-huo.html</link><description>### 如何激活typora?(手动激活)&#13;
第一步： 下载最新版本的Typora安装&#13;
&#13;
第二部： 安装完后，进入typora的安装目录下的 \resources\page-dist\static\js 目录，找到 LicenseIndex开头的文件，我这里文件名如下：&#13;
![image](https://github.com/China-Wei/China-Wei.github.io/assets/52816610/f06bf528-0d54-430c-ae45-f78808114415)&#13;
3、用文本编辑器打开该文件，搜索hasActivated="true"==e.hasActivated并将其替换为hasActivated="true"=="true"&#13;
（修改前，可将该文件备份一下，万一操作失误，可以进行恢复）&#13;
![image](https://github.com/China-Wei/China-Wei.github.io/assets/52816610/c6fae21f-addd-4072-9b6c-ac6bb5f7e702)&#13;
完成上述操作就完成了typora的激活！&#13;
&#13;
### IDEA,PYCHARM激活网站：&#13;
http://idea.hicxy.com/&#13;
https://www.ajihuo.com/&#13;
&#13;
。</description><guid isPermaLink="true">http://blog.meekdai.com/post/gong-ju-ji-huo.html</guid><pubDate>Fri, 08 Mar 2024 07:28:57 +0000</pubDate></item><item><title>博客测试</title><link>http://blog.meekdai.com/post/bo-ke-ce-shi.html</link><description>### 生如波涛，终归平寂&#13;
                                     ###  陈振威。</description><guid isPermaLink="true">http://blog.meekdai.com/post/bo-ke-ce-shi.html</guid><pubDate>Tue, 05 Mar 2024 07:52:30 +0000</pubDate></item></channel></rss>