<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>陈振威</title><link>http://blog.meekdai.com</link><description>人生而自由</description><copyright>陈振威</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://meekdai.com/avatar.svg</url><title>avatar</title><link>http://blog.meekdai.com</link></image><lastBuildDate>Tue, 22 Oct 2024 09:32:59 +0000</lastBuildDate><managingEditor>陈振威</managingEditor><ttl>60</ttl><webMaster>陈振威</webMaster><item><title>Java位运算的基础及使用</title><link>http://blog.meekdai.com/post/Java-wei-yun-suan-de-ji-chu-ji-shi-yong.html</link><description>#### Java位运算的基础及使用（意义）&#13;
&#13;
  *     *       *         * 前言&#13;
        *       一、位运算基础&#13;
        *       二、位运算应用&#13;
        *       三、位运算试题&#13;
&#13;
##### 前言&#13;
&#13;
这几天在看HashMap的源码，但里面的位运算太多，看得有点晕。</description><guid isPermaLink="true">http://blog.meekdai.com/post/Java-wei-yun-suan-de-ji-chu-ji-shi-yong.html</guid><pubDate>Tue, 22 Oct 2024 09:32:29 +0000</pubDate></item><item><title>小星星的可爱照片</title><link>http://blog.meekdai.com/post/xiao-xing-xing-de-ke-ai-zhao-pian.html</link><description>小星星的可爱照片。</description><guid isPermaLink="true">http://blog.meekdai.com/post/xiao-xing-xing-de-ke-ai-zhao-pian.html</guid><pubDate>Tue, 13 Aug 2024 09:15:31 +0000</pubDate></item><item><title>数据结构】 哈希（Hash超详解）HashSet&amp;HashMap【神装】</title><link>http://blog.meekdai.com/post/shu-ju-jie-gou-%E3%80%91%20-ha-xi-%EF%BC%88Hash-chao-xiang-jie-%EF%BC%89HashSet%26HashMap%E3%80%90-shen-zhuang-%E3%80%91.html</link><description>[Java 【数据结构】 哈希（Hash超详解）HashSet&amp;HashMap【神装】.md](https://github.com/user-attachments/files/15582242/Java.Hash.HashSet.HashMap.md)&#13;
。</description><guid isPermaLink="true">http://blog.meekdai.com/post/shu-ju-jie-gou-%E3%80%91%20-ha-xi-%EF%BC%88Hash-chao-xiang-jie-%EF%BC%89HashSet%26HashMap%E3%80%90-shen-zhuang-%E3%80%91.html</guid><pubDate>Wed, 05 Jun 2024 08:57:44 +0000</pubDate></item><item><title>stockExcel</title><link>http://blog.meekdai.com/post/stockExcel.html</link><description>[超短线指标-2.1.xls](https://github.com/China-Wei/China-Wei.github.io/files/15493197/-2.1.xls)&#13;
。</description><guid isPermaLink="true">http://blog.meekdai.com/post/stockExcel.html</guid><pubDate>Thu, 30 May 2024 03:02:56 +0000</pubDate></item><item><title>github-recovery-codes.txt</title><link>http://blog.meekdai.com/post/github-recovery-codes.txt.html</link><description>15f20-398cb&#13;
b3b79-efdc3&#13;
b57ee-13859&#13;
3af61-994fb&#13;
41829-5a4dc&#13;
72038-a328c&#13;
24b1b-5d6d6&#13;
b1686-ff026&#13;
dd711-0f24c&#13;
90eda-ed2b7&#13;
6f64f-e5f74&#13;
4db26-465f6&#13;
71624-c7c60&#13;
be6c5-58fea&#13;
abcc2-2314f&#13;
02961-845c4。</description><guid isPermaLink="true">http://blog.meekdai.com/post/github-recovery-codes.txt.html</guid><pubDate>Thu, 23 May 2024 10:39:50 +0000</pubDate></item><item><title>【Java】SpringBoot快速整合ElasticSearch</title><link>http://blog.meekdai.com/post/%E3%80%90Java%E3%80%91SpringBoot-kuai-su-zheng-he-ElasticSearch.html</link><description>### 什么是ES？&#13;
&#13;
Elasticsearch（简称为ES）是一个开源**的分布式搜索引擎，用于全文搜索、实时分析和可视化。</description><guid isPermaLink="true">http://blog.meekdai.com/post/%E3%80%90Java%E3%80%91SpringBoot-kuai-su-zheng-he-ElasticSearch.html</guid><pubDate>Thu, 16 May 2024 05:45:59 +0000</pubDate></item><item><title>第二讲字符串相关类</title><link>http://blog.meekdai.com/post/di-er-jiang-zi-fu-chuan-xiang-guan-lei.html</link><description>**目录**&#13;
&#13;
&#13;
一、String&#13;
&#13;
1.Java中的数据类型&#13;
&#13;
2.字符串概述&#13;
&#13;
3.字符串构造方法&#13;
&#13;
4.字符串构造内存原理&#13;
&#13;
5.字符串比较&#13;
&#13;
6.字符串常见方法&#13;
&#13;
二、StringBuilder&#13;
&#13;
1.定义&#13;
&#13;
2.常用方法&#13;
&#13;
3.StringBuilder内存分析&#13;
&#13;
三、StringJoiner&#13;
&#13;
1.定义&#13;
&#13;
2.常用方法&#13;
&#13;
* * *&#13;
&#13;
##  一、String&#13;
&#13;
### 1.Java中的数据类型&#13;
&#13;
&gt; 在Java中数据类型被分为**基本数据类型** 和**引用数据类型** 。</description><guid isPermaLink="true">http://blog.meekdai.com/post/di-er-jiang-zi-fu-chuan-xiang-guan-lei.html</guid><pubDate>Wed, 15 May 2024 08:28:18 +0000</pubDate></item><item><title>MySQL 的锁</title><link>http://blog.meekdai.com/post/MySQL%20-de-suo.html</link><description>原链：https://zhuanlan.zhihu.com/p/681227627&#13;
线上系统中，在高并发的访问之下，出现了 死锁问题 或者 等待锁时间过长导致超时，那么碰到这些情况，就可能问你锁相关的问题&#13;
首先还是先给锁分类，之后再来逐个了解：&#13;
按照功能划分：&#13;
&#13;
- 共享锁：也叫 S 锁 或 读锁，是共享的，不互斥&#13;
- 加锁方式：select ... lock in share mode&#13;
- 排他锁：也叫 X 锁 或 写锁，写锁阻塞其他锁&#13;
- 加锁方式：select ... for update&#13;
&#13;
按照锁的粒度划分：&#13;
&#13;
- 全局锁：锁整个数据库&#13;
- 表级锁：锁整个表&#13;
- 行级锁：锁一行记录的索引&#13;
- 记录锁：锁定索引的一条记录&#13;
- 间隙锁：锁定一个索引区间&#13;
- 临键锁：记录锁和间隙锁的结合，解决幻读问题&#13;
- 插入意向锁：执行 insert 时添加的行记录 id 的锁&#13;
- 意向锁：存储引擎级别的“表级锁”&#13;
&#13;
相关命令：&#13;
```&#13;
-- 加锁&#13;
flush tables with read lock;&#13;
&#13;
-- 释放锁&#13;
unlock tables;&#13;
```&#13;
&#13;
表级锁:&#13;
表级锁中又分为以下几种：&#13;
&#13;
- 表读锁：阻塞对当前表的写，但不阻塞读&#13;
- 表写锁：阻塞队当前表的读和写&#13;
- 元数据锁：这个锁不需要我们手动去添加，在访问表的时候，会自动加上，这个锁是为了保证读写的正确&#13;
- 当对表做 增删改查 时，会自动添加元数据读锁&#13;
- 当对表做 结构变更 时，会自动添加元数据写锁&#13;
&#13;
- 自增锁：是一种特殊的表级锁，自增列事务执行插入操作时产生&#13;
查看表级锁的命令：&#13;
&#13;
```&#13;
-- 查看表锁定状态&#13;
show status like 'table_locks%';&#13;
-- 添加表读锁&#13;
lock table user read;&#13;
-- 添加表写锁&#13;
lock table user write;&#13;
-- 查看表锁情况&#13;
show open tables;&#13;
-- 删除表锁&#13;
unlock tables;&#13;
```&#13;
&#13;
![image](https://github.com/China-Wei/China-Wei.github.io/assets/52816610/306ad97d-9743-4e62-8eb9-1ede2bd8ff7d)&#13;
&#13;
**行级锁**&#13;
&#13;
MySQL 的行级锁是由存储引擎是实现的，InnoDB 的行锁就是通过给 索引加锁 来实现&#13;
&#13;
注意：InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁。</description><guid isPermaLink="true">http://blog.meekdai.com/post/MySQL%20-de-suo.html</guid><pubDate>Tue, 07 May 2024 02:51:00 +0000</pubDate></item><item><title>股票</title><link>http://blog.meekdai.com/post/gu-piao.html</link><description>量化交易策略:https://github.com/edarchimbaud/awesome-systematic-trading。</description><guid isPermaLink="true">http://blog.meekdai.com/post/gu-piao.html</guid><pubDate>Sat, 23 Mar 2024 00:04:22 +0000</pubDate></item><item><title>工具激活</title><link>http://blog.meekdai.com/post/gong-ju-ji-huo.html</link><description>### 如何激活typora?(手动激活)&#13;
第一步： 下载最新版本的Typora安装&#13;
&#13;
第二部： 安装完后，进入typora的安装目录下的 \resources\page-dist\static\js 目录，找到 LicenseIndex开头的文件，我这里文件名如下：&#13;
![image](https://github.com/China-Wei/China-Wei.github.io/assets/52816610/f06bf528-0d54-430c-ae45-f78808114415)&#13;
3、用文本编辑器打开该文件，搜索hasActivated='true'==e.hasActivated并将其替换为hasActivated='true'=='true'&#13;
（修改前，可将该文件备份一下，万一操作失误，可以进行恢复）&#13;
![image](https://github.com/China-Wei/China-Wei.github.io/assets/52816610/c6fae21f-addd-4072-9b6c-ac6bb5f7e702)&#13;
完成上述操作就完成了typora的激活！&#13;
&#13;
### IDEA,PYCHARM激活网站：&#13;
http://idea.hicxy.com/&#13;
https://www.ajihuo.com/&#13;
&#13;
。</description><guid isPermaLink="true">http://blog.meekdai.com/post/gong-ju-ji-huo.html</guid><pubDate>Fri, 08 Mar 2024 07:28:57 +0000</pubDate></item><item><title>博客测试</title><link>http://blog.meekdai.com/post/bo-ke-ce-shi.html</link><description>### 生如波涛，终归平寂&#13;
                                     ###  陈振威。</description><guid isPermaLink="true">http://blog.meekdai.com/post/bo-ke-ce-shi.html</guid><pubDate>Tue, 05 Mar 2024 07:52:30 +0000</pubDate></item></channel></rss>